<h3 class="text-moon-32  transition-colors mb-4">Roles</h3>
<div class="flex justify-between">
  <Button on_click="open_create_modal" class="mb-4 mr-4 bg-popo hover:bg-neutral-700">
    Add Role
  </Button>

  <Dropdown id="dropdown">
    <Dropdown.Trigger>
      <Button class="bg-popo hover:bg-neutral-700">{@dropdown_name}</Button>
    </Dropdown.Trigger>
    <Dropdown.Options class="w-auto">
      {#for item <- @items}
        <Dropdown.Option on_click="option_send" value={item}>
          <Lego.Title>{item}</Lego.Title>
        </Dropdown.Option>
      {#else}
        No items
      {/for}
      <Dropdown.Option on_click="option_send_all" value="All_operators">
        <Lego.Title>All operators</Lego.Title>
      </Dropdown.Option>
    </Dropdown.Options>
  </Dropdown>

  <Search
    id="default-search"
    {=@filter}
    on_keyup="change_filter"
    options={[]}
    class="pb-4 ml-4"
    prompt="Search by roles"
  />
</div>

<Snackbar
  id="snackbar_delete_role"
  is_open={@open_delete_snackbar}
  timeout={2000}
  :if={@open_delete_snackbar}
>
  <Snackbar.Icon class="bg-roshi-10 text-roshi">
    <GenericInfo />
  </Snackbar.Icon>
  <Snackbar.Content>
    <Snackbar.Header>Success</Snackbar.Header>
    <Snackbar.Message>Role {@role.name} deleted</Snackbar.Message>
  </Snackbar.Content>
  <Snackbar.Close />
</Snackbar>

<Snackbar
  id="snackbar_create_role"
  is_open={@open_create_snackbar}
  timeout={2000}
  :if={@open_create_snackbar}
>
  <Snackbar.Icon class="bg-roshi-10 text-roshi">
    <GenericInfo />
  </Snackbar.Icon>
  <Snackbar.Content>
    <Snackbar.Header>Success</Snackbar.Header>
    <Snackbar.Message>Role successfully created</Snackbar.Message>
  </Snackbar.Content>
  <Snackbar.Close />
</Snackbar>

<Snackbar
  id="snackbar_create_role_false"
  is_open={@open_create_snackbar_error}
  timeout={2000}
  :if={@open_create_snackbar_error}
>
  <Snackbar.Icon class="bg-chichi-10 text-chichi">
    <GenericInfo />
  </Snackbar.Icon>
  <Snackbar.Content>
    <Snackbar.Header>ERROR</Snackbar.Header>
    <Snackbar.Message>Role was already created or length less than 3 or more than 25</Snackbar.Message>
  </Snackbar.Content>
  <Snackbar.Close />
</Snackbar>

<Modal id="default_modal" is_open={@role_delete_open} :if={@role_delete_open}>
  <Modal.Backdrop />
  <Modal.Panel>
    <div class="p-4  border-beerus">
      <h3 class="text-moon-18 text-center text-bulma font-medium border-b-2 pb-4">
        Are you sure you want to delete role: {@role.name} ?
      </h3>
      <br>
      <div class="text-left border-b-2 pb-4">
        id: {@role.id}
        <br>
        Role name: {@role.name}
      </div>
    </div>
    <div class="p-4 border-beerus flex justify-end">
      <Button on_click="set_close" variant="outline">Discard</Button>
      <Button on_click="set_close_confirm" value={@role.id} class="bg-popo hover:bg-zeno ml-4">Confirm</Button>
    </div>
  </Modal.Panel>
</Modal>

<Modal id="create_role_modal" is_open={@role_modal_open} :if={@role_modal_open}>
  <Modal.Backdrop />
  <Modal.Panel>
    <div class="p-4  border-beerus">
      <h3 class="text-moon-18 text-center text-bulma font-medium border-b-2 pb-4">
        Create new Role
      </h3>
      <br>
      <div class="text-left border-b-2 pb-4">
        <Form for={@form} change="validate" submit="save">
          <Field class="p-4" label="Operator">
            <Input placeholder="Operator" disabled value={get_name(@current_user.operator_id)} />
          </Field>
          <Field field={:name} class="p-4" label="Role name">
            <Input placeholder="Role name" />
          </Field>
          <div class="p-4 border-beerus flex justify-end">
            <Button on_click="close_create_modal" variant="outline">Discard</Button>
            <Button type="submit" class="bg-popo hover:bg-zeno ml-4">Create</Button>
          </div>
        </Form>
      </div>
    </div>
  </Modal.Panel>
</Modal>

<Drawer id="drawer" is_open={@drawer_open} on_close="close_drawer" :if={@drawer_open}>
  <Drawer.Panel class="p-8">
    <Form for={@form} change="validate" submit="update_role">
      <div class="flex items-center justify-center">
        <p class="text-2xl font-bold">
          Role information</p>
      </div>
      {#if @selected_role.operator_id != nil}
        <Field class="pt-4" label="Operator">
          <Input placeholder="Operator" disabled value={get_name(@selected_role.operator_id)} />
        </Field>
      {#else}
        <Field class="pt-4" label="Operator">
          <Input placeholder="Operator" disabled value="Super Admin don't have operator" />
        </Field>
      {/if}
      {#if Mix.env() == :test}
        <Field field={:name} class="pt-4 pb-8" label="Name">
          <Input placeholder="Name" value={@selected_role.name} />
        </Field>
        <div class="flex justify-end">
          <Button on_click="close_drawer" variant="outline">Discard</Button>
          <Button class="bg-popo hover:bg-zeno ml-4" type="submit">Update</Button>
        </div>
      {#elseif @current_user.operator_id != @selected_role.operator_id}
        <Field field={:name} class="pt-4 pb-8" label="Name">
          <Input placeholder="Name" disabled value={@selected_role.name} />
        </Field>
        <div class="flex justify-between">
          <Button class="mu-2 mb-2" type="submit" disabled="true">Update</Button>
          <Button class="bg-chichi" on_click="close_drawer" disabled="true">
            Cancel</Button>
        </div>
      {#else}
        <Field field={:name} class="pt-4 pb-8" label="Name">
          <Input placeholder="Name" value={@selected_role.name} />
        </Field>
        <div class="flex justify-end">
          <Button on_click="close_drawer" variant="outline">Discard</Button>
          <Button class="bg-popo hover:bg-zeno ml-4" type="submit">Update</Button>
        </div>
      {/if}
    </Form>
  </Drawer.Panel>
</Drawer>

<div class="w-full gap-4">
  <Table
    id="table_users"
    items={role <- roles_pages(assigns)}
    {=@sort}
    sorting_click="handle_sorting_click"
    is_cell_border
    row_click="open_drawer"
    class="mt-4"
  >
    <Column name="id" label="ID" sortable>
      {role.id}
    </Column>
    <Column name="name" label="Name" sortable>
      {role.name}
    </Column>
    <Column name="operator" label="Operator">
      {#if role.operator_id == nil}
        "Super_admin need no operator"
      {#else}
        {CasinosAdmins.get_operator(role.operator_id).name}
      {/if}
    </Column>
    <Column name="inserted_at" label="Updated at" sortable>
      {Timex.format!(role.updated_at, "%b %d, %Y, %H:%M:%S", :strftime)}
    </Column>
    <Column name="users_roles" label="How much user have this role">
      {CasinosAdmins.count_users_with_role(role.id)}
    </Column>
    <Column label="">
      {#if role.operator_id == nil}
        <Button full_width="true" on_click="set_open" value={role.id} disabled="true" class="bg-popo">Delete role</Button>
      {#else}
        {#if @current_user.operator_id == role.operator_id or Mix.env() == :test}
          <Button full_width="true" on_click="set_open" value={role.id} class="bg-popo hover:bg-zeno">Delete role</Button>
        {#else}
          <Button full_width="true" on_click="set_open" value={role.id} disabled="true" class="bg-popo">Delete role</Button>
        {/if}
      {/if}
    </Column>
  </Table>
  <br>
  <Pagination
    id="with_buttons"
    total_pages={max(ceil(Enum.count(@roles) / @limit), 1)}
    value={@current_page}
    on_change="handle_paging_click"
  >
    <Pagination.PrevButton class="border-none">
      <ControlsChevronLeft class="text-moon-24 rtl:rotate-180" />
    </Pagination.PrevButton>
    <Pagination.Pages selected_bg_color="bg-popo text-goku" />
    <Pagination.NextButton class="border-none">
      <ControlsChevronRight class="text-moon-24 rtl:rotate-180" />
    </Pagination.NextButton>
  </Pagination>
</div>